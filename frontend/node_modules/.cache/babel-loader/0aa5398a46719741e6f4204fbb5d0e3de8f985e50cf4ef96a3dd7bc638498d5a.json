{"ast":null,"code":"var _jsxFileName = \"/Users/tebogoramolobeng/Documents/peopleconnect/frontend/src/employee/ProfileComments.js\",\n  _s = $RefreshSig$();\n// src/components/ProfileComments.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileComments = ({\n  userId,\n  comments\n}) => {\n  _s();\n  const [newComment, setNewComment] = useState(\"\");\n  const handleAddComment = async () => {\n    try {\n      const response = await axios.post(`/api/employees/comment/${userId}`, {\n        comment: newComment\n      });\n      setNewComment(\"\");\n      // Refresh comments list after adding\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [comment.name, \": \", comment.comment]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newComment,\n      onChange: e => setNewComment(e.target.value),\n      placeholder: \"Add a comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddComment,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileComments, \"hdmU//CB++ZG3hy6Wzlv3cAh5aM=\");\n_c = ProfileComments;\nexport default ProfileComments;\nvar _c;\n$RefreshReg$(_c, \"ProfileComments\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ProfileComments","userId","comments","_s","newComment","setNewComment","handleAddComment","response","post","comment","window","location","reload","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","name","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/tebogoramolobeng/Documents/peopleconnect/frontend/src/employee/ProfileComments.js"],"sourcesContent":["// src/components/ProfileComments.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst ProfileComments = ({ userId, comments }) => {\n  const [newComment, setNewComment] = useState(\"\");\n\n  const handleAddComment = async () => {\n    try {\n      const response = await axios.post(`/api/employees/comment/${userId}`, {\n        comment: newComment,\n      });\n      setNewComment(\"\");\n      // Refresh comments list after adding\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Comments</h2>\n      <ul>\n        {comments.map((comment, index) => (\n          <li key={index}>\n            {comment.name}: {comment.comment}\n          </li>\n        ))}\n      </ul>\n      <textarea\n        value={newComment}\n        onChange={(e) => setNewComment(e.target.value)}\n        placeholder=\"Add a comment\"\n      />\n      <button onClick={handleAddComment}>Submit</button>\n    </div>\n  );\n};\n\nexport default ProfileComments;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,0BAA0BP,MAAM,EAAE,EAAE;QACpEQ,OAAO,EAAEL;MACX,CAAC,CAAC;MACFC,aAAa,CAAC,EAAE,CAAC;MACjB;MACAK,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBpB,OAAA;MAAAgB,QAAA,EACGb,QAAQ,CAACkB,GAAG,CAAC,CAACX,OAAO,EAAEY,KAAK,kBAC3BtB,OAAA;QAAAgB,QAAA,GACGN,OAAO,CAACa,IAAI,EAAC,IAAE,EAACb,OAAO,CAACA,OAAO;MAAA,GADzBY,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLpB,OAAA;MACEwB,KAAK,EAAEnB,UAAW;MAClBoB,QAAQ,EAAGC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAe;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFpB,OAAA;MAAQ6B,OAAO,EAAEtB,gBAAiB;MAAAS,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAAChB,EAAA,CAlCIH,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AAoCrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}