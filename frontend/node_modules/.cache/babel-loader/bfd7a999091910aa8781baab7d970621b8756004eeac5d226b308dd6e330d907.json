{"ast":null,"code":"var _jsxFileName = \"/Users/tebogoramolobeng/Documents/peopleconnect/frontend/src/hr/EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport HRSidebar from \"../components/sidebar/HRSidebar\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [managers, setManagers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [updatedManager, setUpdatedManager] = useState({});\n  useEffect(() => {\n    fetchEmployees();\n    fetchManagers();\n  }, []);\n  const fetchEmployees = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\"http://localhost:5002/api/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEmployees(response.data.filter(user => user.role === \"employee\")); // Only employees\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching employees:\", error);\n      setError(\"Failed to load employee data.\");\n    }\n  };\n  const fetchManagers = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\"http://localhost:5002/api/users?role=manager\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setManagers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching managers:\", error);\n    }\n  };\n  const handleManagerChange = (employeeId, managerId) => {\n    setUpdatedManager(prev => ({\n      ...prev,\n      [employeeId]: managerId\n    }));\n  };\n  const handleSaveAssignment = async employeeId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const managerId = updatedManager[employeeId];\n      await axios.put(`http://localhost:5002/api/users/${employeeId}/assign-manager`, {\n        managerId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEmployees(prevEmployees => prevEmployees.map(emp => emp._id === employeeId ? {\n        ...emp,\n        manager: managerId\n      } : emp));\n      alert(\"Manager assignment updated successfully\");\n    } catch (error) {\n      console.error(\"Error assigning manager:\", error);\n      alert(\"Failed to assign manager. Please check the server endpoint.\");\n    }\n  };\n  const handleDelete = async employeeId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:5002/api/users/${employeeId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEmployees(prev => prev.filter(emp => emp._id !== employeeId));\n    } catch (error) {\n      console.error(\"Error deleting employee:\", error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HRSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employee List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-hover mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.surname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: updatedManager[employee._id] || employee.manager || \"\",\n                onChange: e => handleManagerChange(employee._id, e.target.value),\n                className: \"form-select\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Unassigned\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this), managers.map(manager => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: manager._id,\n                  children: manager.name\n                }, manager._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                onClick: () => handleSaveAssignment(employee._id),\n                size: \"sm\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: () => handleDelete(employee._id),\n                size: \"sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, employee._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeList, \"AQgNpMbNMqHJzHHSc9FcrPRtIqw=\");\n_c = EmployeeList;\nexport default EmployeeList;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import HRSidebar from \"../components/sidebar/HRSidebar\";\n// import { Modal, Button } from \"react-bootstrap\";\n\n// const EmployeeList = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [editEmployee, setEditEmployee] = useState(null);\n//   const [userRole, setUserRole] = useState(\"\");\n//   const [showModal, setShowModal] = useState(false);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: \"\",\n//     surname: \"\",\n//     email: \"\",\n//     role: \"employee\",\n//   });\n\n//   // Pagination state\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const employeesPerPage = 10;\n\n//   // Fetch employees on mount\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const token = localStorage.getItem(\"token\");\n//         const response = await axios.get(\"http://localhost:5002/api/users\", {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setEmployees(response.data);\n//         setUserRole(localStorage.getItem(\"role\"));\n//       } catch (err) {\n//         console.error(\"Error fetching employees:\", err);\n//         setError(\"Failed to load employee data.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchEmployees();\n//   }, []);\n\n//   // Handle modal show/hide\n//   const handleModalShow = () => setShowModal(true);\n//   const handleModalClose = () => setShowModal(false);\n\n//   // Handle adding a new employee\n//   const handleAddEmployee = async () => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const response = await axios.post(\n//         \"http://localhost:5002/api/users\",\n//         newEmployee,\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       setEmployees([...employees, response.data]);\n//       handleModalClose();\n//       setNewEmployee({ name: \"\", surname: \"\", email: \"\", role: \"employee\" });\n//     } catch (error) {\n//       console.error(\"Error adding employee:\", error);\n//       alert(\"Failed to add employee.\");\n//     }\n//   };\n\n//   // Handle deleting an employee\n//   const handleDelete = async (id) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       await axios.delete(`http://localhost:5002/api/users/${id}`, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       setEmployees(employees.filter((emp) => emp._id !== id));\n//     } catch (err) {\n//       console.error(\"Error deleting employee:\", err);\n//       alert(\"Failed to delete employee.\");\n//     }\n//   };\n\n//   // Pagination handlers\n//   const indexOfLastEmployee = currentPage * employeesPerPage;\n//   const indexOfFirstEmployee = indexOfLastEmployee - employeesPerPage;\n//   const currentEmployees = employees.slice(\n//     indexOfFirstEmployee,\n//     indexOfLastEmployee\n//   );\n\n//   const handlePrevPage = () => setCurrentPage((prev) => Math.max(prev - 1, 1));\n//   const handleNextPage = () => setCurrentPage((prev) => prev + 1);\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   return (\n//     <div>\n//       <HRSidebar />\n//       <div className=\"container\">\n//         <h2>Employee List</h2>\n\n//         {/* Add Employee Button */}\n//         {userRole === \"hr\" && (\n//           <Button variant=\"primary\" onClick={handleModalShow}>\n//             Add New Employee\n//           </Button>\n//         )}\n\n//         {/* Employee List Table */}\n//         <table className=\"table table-striped table-hover mt-3\">\n//           <thead>\n//             <tr>\n//               <th>Name</th>\n//               <th>Surname</th>\n//               <th>Email</th>\n//               <th>Role</th>\n//               {userRole === \"hr\" && <th>Actions</th>}\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {currentEmployees.map((employee) => (\n//               <tr key={employee._id}>\n//                 <td>{employee.name}</td>\n//                 <td>{employee.surname}</td>\n//                 <td>{employee.email}</td>\n//                 <td>{employee.role}</td>\n//                 {userRole === \"hr\" && (\n//                   <td>\n//                     <Button\n//                       variant=\"warning\"\n//                       onClick={() => setEditEmployee(employee)}\n//                       size=\"sm\"\n//                     >\n//                       Edit\n//                     </Button>\n//                     <Button\n//                       variant=\"danger\"\n//                       onClick={() => handleDelete(employee._id)}\n//                       size=\"sm\"\n//                     >\n//                       Delete\n//                     </Button>\n//                   </td>\n//                 )}\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n\n//         {/* Pagination Controls */}\n//         <div className=\"d-flex justify-content-between\">\n//           <Button onClick={handlePrevPage} disabled={currentPage === 1}>\n//             Previous\n//           </Button>\n//           <span>Page {currentPage}</span>\n//           <Button\n//             onClick={handleNextPage}\n//             disabled={currentEmployees.length < employeesPerPage}\n//           >\n//             Next\n//           </Button>\n//         </div>\n\n//         {/* Modal for Adding Employee */}\n//         <Modal show={showModal} onHide={handleModalClose}>\n//           <Modal.Header closeButton>\n//             <Modal.Title>Add New Employee</Modal.Title>\n//           </Modal.Header>\n//           <Modal.Body>\n//             <input\n//               type=\"text\"\n//               placeholder=\"First Name\"\n//               value={newEmployee.name}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, name: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Surname\"\n//               value={newEmployee.surname}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, surname: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               value={newEmployee.email}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, email: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             />\n//             <select\n//               value={newEmployee.role}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, role: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             >\n//               <option value=\"employee\">Employee</option>\n//               <option value=\"manager\">Manager</option>\n//               <option value=\"hr\">HR</option>\n//             </select>\n//           </Modal.Body>\n//           <Modal.Footer>\n//             <Button variant=\"secondary\" onClick={handleModalClose}>\n//               Close\n//             </Button>\n//             <Button variant=\"primary\" onClick={handleAddEmployee}>\n//               Add Employee\n//             </Button>\n//           </Modal.Footer>\n//         </Modal>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","HRSidebar","Button","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","managers","setManagers","loading","setLoading","error","setError","updatedManager","setUpdatedManager","fetchEmployees","fetchManagers","token","localStorage","getItem","response","get","headers","Authorization","data","filter","user","role","console","handleManagerChange","employeeId","managerId","prev","handleSaveAssignment","put","prevEmployees","map","emp","_id","manager","alert","handleDelete","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","className","employee","name","surname","email","value","onChange","e","target","variant","onClick","size","_c","$RefreshReg$"],"sources":["/Users/tebogoramolobeng/Documents/peopleconnect/frontend/src/hr/EmployeeList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport HRSidebar from \"../components/sidebar/HRSidebar\";\nimport { Button } from \"react-bootstrap\";\n\nconst EmployeeList = () => {\n  const [employees, setEmployees] = useState([]);\n  const [managers, setManagers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [updatedManager, setUpdatedManager] = useState({});\n\n  useEffect(() => {\n    fetchEmployees();\n    fetchManagers();\n  }, []);\n\n  const fetchEmployees = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\"http://localhost:5002/api/users\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setEmployees(response.data.filter((user) => user.role === \"employee\")); // Only employees\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching employees:\", error);\n      setError(\"Failed to load employee data.\");\n    }\n  };\n\n  const fetchManagers = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\n        \"http://localhost:5002/api/users?role=manager\",\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      setManagers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching managers:\", error);\n    }\n  };\n\n  const handleManagerChange = (employeeId, managerId) => {\n    setUpdatedManager((prev) => ({ ...prev, [employeeId]: managerId }));\n  };\n\n  const handleSaveAssignment = async (employeeId) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const managerId = updatedManager[employeeId];\n      await axios.put(\n        `http://localhost:5002/api/users/${employeeId}/assign-manager`,\n        { managerId },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      setEmployees((prevEmployees) =>\n        prevEmployees.map((emp) =>\n          emp._id === employeeId ? { ...emp, manager: managerId } : emp\n        )\n      );\n      alert(\"Manager assignment updated successfully\");\n    } catch (error) {\n      console.error(\"Error assigning manager:\", error);\n      alert(\"Failed to assign manager. Please check the server endpoint.\");\n    }\n  };\n\n  const handleDelete = async (employeeId) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:5002/api/users/${employeeId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setEmployees((prev) => prev.filter((emp) => emp._id !== employeeId));\n    } catch (error) {\n      console.error(\"Error deleting employee:\", error);\n    }\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div>\n      <HRSidebar />\n      <div className=\"container\">\n        <h2>Employee List</h2>\n\n        <table className=\"table table-striped table-hover mt-3\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Surname</th>\n              <th>Email</th>\n              <th>Role</th>\n              <th>Manager</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {employees.map((employee) => (\n              <tr key={employee._id}>\n                <td>{employee.name}</td>\n                <td>{employee.surname}</td>\n                <td>{employee.email}</td>\n                <td>{employee.role}</td>\n                <td>\n                  <select\n                    value={\n                      updatedManager[employee._id] || employee.manager || \"\"\n                    }\n                    onChange={(e) =>\n                      handleManagerChange(employee._id, e.target.value)\n                    }\n                    className=\"form-select\"\n                  >\n                    <option value=\"\">Unassigned</option>\n                    {managers.map((manager) => (\n                      <option key={manager._id} value={manager._id}>\n                        {manager.name}\n                      </option>\n                    ))}\n                  </select>\n                </td>\n                <td>\n                  <Button\n                    variant=\"success\"\n                    onClick={() => handleSaveAssignment(employee._id)}\n                    size=\"sm\"\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => handleDelete(employee._id)}\n                    size=\"sm\"\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeList;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import HRSidebar from \"../components/sidebar/HRSidebar\";\n// import { Modal, Button } from \"react-bootstrap\";\n\n// const EmployeeList = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [editEmployee, setEditEmployee] = useState(null);\n//   const [userRole, setUserRole] = useState(\"\");\n//   const [showModal, setShowModal] = useState(false);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: \"\",\n//     surname: \"\",\n//     email: \"\",\n//     role: \"employee\",\n//   });\n\n//   // Pagination state\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const employeesPerPage = 10;\n\n//   // Fetch employees on mount\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const token = localStorage.getItem(\"token\");\n//         const response = await axios.get(\"http://localhost:5002/api/users\", {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setEmployees(response.data);\n//         setUserRole(localStorage.getItem(\"role\"));\n//       } catch (err) {\n//         console.error(\"Error fetching employees:\", err);\n//         setError(\"Failed to load employee data.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchEmployees();\n//   }, []);\n\n//   // Handle modal show/hide\n//   const handleModalShow = () => setShowModal(true);\n//   const handleModalClose = () => setShowModal(false);\n\n//   // Handle adding a new employee\n//   const handleAddEmployee = async () => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const response = await axios.post(\n//         \"http://localhost:5002/api/users\",\n//         newEmployee,\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       setEmployees([...employees, response.data]);\n//       handleModalClose();\n//       setNewEmployee({ name: \"\", surname: \"\", email: \"\", role: \"employee\" });\n//     } catch (error) {\n//       console.error(\"Error adding employee:\", error);\n//       alert(\"Failed to add employee.\");\n//     }\n//   };\n\n//   // Handle deleting an employee\n//   const handleDelete = async (id) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       await axios.delete(`http://localhost:5002/api/users/${id}`, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       setEmployees(employees.filter((emp) => emp._id !== id));\n//     } catch (err) {\n//       console.error(\"Error deleting employee:\", err);\n//       alert(\"Failed to delete employee.\");\n//     }\n//   };\n\n//   // Pagination handlers\n//   const indexOfLastEmployee = currentPage * employeesPerPage;\n//   const indexOfFirstEmployee = indexOfLastEmployee - employeesPerPage;\n//   const currentEmployees = employees.slice(\n//     indexOfFirstEmployee,\n//     indexOfLastEmployee\n//   );\n\n//   const handlePrevPage = () => setCurrentPage((prev) => Math.max(prev - 1, 1));\n//   const handleNextPage = () => setCurrentPage((prev) => prev + 1);\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   return (\n//     <div>\n//       <HRSidebar />\n//       <div className=\"container\">\n//         <h2>Employee List</h2>\n\n//         {/* Add Employee Button */}\n//         {userRole === \"hr\" && (\n//           <Button variant=\"primary\" onClick={handleModalShow}>\n//             Add New Employee\n//           </Button>\n//         )}\n\n//         {/* Employee List Table */}\n//         <table className=\"table table-striped table-hover mt-3\">\n//           <thead>\n//             <tr>\n//               <th>Name</th>\n//               <th>Surname</th>\n//               <th>Email</th>\n//               <th>Role</th>\n//               {userRole === \"hr\" && <th>Actions</th>}\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {currentEmployees.map((employee) => (\n//               <tr key={employee._id}>\n//                 <td>{employee.name}</td>\n//                 <td>{employee.surname}</td>\n//                 <td>{employee.email}</td>\n//                 <td>{employee.role}</td>\n//                 {userRole === \"hr\" && (\n//                   <td>\n//                     <Button\n//                       variant=\"warning\"\n//                       onClick={() => setEditEmployee(employee)}\n//                       size=\"sm\"\n//                     >\n//                       Edit\n//                     </Button>\n//                     <Button\n//                       variant=\"danger\"\n//                       onClick={() => handleDelete(employee._id)}\n//                       size=\"sm\"\n//                     >\n//                       Delete\n//                     </Button>\n//                   </td>\n//                 )}\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n\n//         {/* Pagination Controls */}\n//         <div className=\"d-flex justify-content-between\">\n//           <Button onClick={handlePrevPage} disabled={currentPage === 1}>\n//             Previous\n//           </Button>\n//           <span>Page {currentPage}</span>\n//           <Button\n//             onClick={handleNextPage}\n//             disabled={currentEmployees.length < employeesPerPage}\n//           >\n//             Next\n//           </Button>\n//         </div>\n\n//         {/* Modal for Adding Employee */}\n//         <Modal show={showModal} onHide={handleModalClose}>\n//           <Modal.Header closeButton>\n//             <Modal.Title>Add New Employee</Modal.Title>\n//           </Modal.Header>\n//           <Modal.Body>\n//             <input\n//               type=\"text\"\n//               placeholder=\"First Name\"\n//               value={newEmployee.name}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, name: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Surname\"\n//               value={newEmployee.surname}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, surname: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               value={newEmployee.email}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, email: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             />\n//             <select\n//               value={newEmployee.role}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, role: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             >\n//               <option value=\"employee\">Employee</option>\n//               <option value=\"manager\">Manager</option>\n//               <option value=\"hr\">HR</option>\n//             </select>\n//           </Modal.Body>\n//           <Modal.Footer>\n//             <Button variant=\"secondary\" onClick={handleModalClose}>\n//               Close\n//             </Button>\n//             <Button variant=\"primary\" onClick={handleAddEmployee}>\n//               Add Employee\n//             </Button>\n//           </Modal.Footer>\n//         </Modal>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EmployeeList;\n"],"mappings":"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,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3C,EAAA,CAhJID,YAAY;AAAAyD,EAAA,GAAZzD,YAAY;AAkJlB,eAAeA,YAAY;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}