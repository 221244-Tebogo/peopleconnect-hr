{"ast":null,"code":"var _jsxFileName = \"/Users/tebogoramolobeng/Documents/peopleconnect/frontend/src/employee/EmployeeLeave.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeLeave = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"EmployeeLeave\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n_c = EmployeeLeave;\nexport default EmployeeLeave;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import {\n//   Form,\n//   Button,\n//   Container,\n//   Card,\n//   Spinner,\n//   Table,\n//   Row,\n//   Col,\n// } from \"react-bootstrap\";\n// import \"./Dashboard.css\"; // Assuming CSS is saved as EmployeeLeave.css\n\n// const EmployeeLeave = () => {\n//   const [leaveData, setLeaveData] = useState({\n//     leaveType: \"Annual\",\n//     startDate: \"\",\n//     endDate: \"\",\n//     reason: \"\",\n//   });\n//   const [file, setFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [numberOfDays, setNumberOfDays] = useState(0);\n//   const [leaveBalance, setLeaveBalance] = useState({\n//     annualLeaveBalance: 0,\n//     sickLeaveBalance: 0,\n//   });\n//   const [leaveHistory, setLeaveHistory] = useState([]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setLeaveData({ ...leaveData, [name]: value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   const calculateNumberOfDays = (start, end) => {\n//     const startDate = new Date(start);\n//     const endDate = new Date(end);\n//     const diffTime = Math.abs(endDate - startDate);\n//     return Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;\n//   };\n\n//   useEffect(() => {\n//     if (leaveData.startDate && leaveData.endDate) {\n//       setNumberOfDays(\n//         calculateNumberOfDays(leaveData.startDate, leaveData.endDate)\n//       );\n//     }\n//   }, [leaveData.startDate, leaveData.endDate]);\n\n//   const fetchLeaveData = async () => {\n//     try {\n//       const [balanceResponse, historyResponse] = await Promise.all([\n//         axios.get(\"http://localhost:5002/api/leaves/balance\", {\n//           headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n//         }),\n//         axios.get(\"http://localhost:5002/api/leaves/history\", {\n//           headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n//         }),\n//       ]);\n\n//       setLeaveBalance({\n//         annualLeaveBalance: balanceResponse.data.annualLeaveBalance,\n//         sickLeaveBalance: balanceResponse.data.sickLeaveBalance,\n//       });\n//       setLeaveHistory(historyResponse.data);\n//     } catch (error) {\n//       console.error(\"Error fetching leave data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchLeaveData();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(leaveData).forEach((key) =>\n//       formData.append(key, leaveData[key])\n//     );\n//     formData.append(\"numberOfDays\", numberOfDays);\n//     if (file) formData.append(\"document\", file);\n\n//     setLoading(true);\n//     try {\n//       await axios.post(\"http://localhost:5002/api/leaves/apply\", formData, {\n//         headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n//       });\n//       alert(\"Leave application submitted successfully\");\n//       await fetchLeaveData();\n//     } catch (error) {\n//       console.error(\"Error applying for leave:\", error);\n//     }\n//     setLoading(false);\n//   };\n\n//   return (\n//     <Container fluid className=\"leave-page\">\n//       <Row>\n//         {/* Main Content */}\n//         <Col md={9}>\n//           <div className=\"main-content\">\n//             <h2>Leave Management Dashboard</h2>\n\n//             <div className=\"leave-section\">\n//               <Card className=\"mb-4\">\n//                 <Card.Body>\n//                   <Card.Title>Apply for Leave</Card.Title>\n//                   <Form onSubmit={handleSubmit}>\n//                     <Form.Group controlId=\"leaveType\" className=\"mb-3\">\n//                       <Form.Label>Leave Type</Form.Label>\n//                       <Form.Control\n//                         as=\"select\"\n//                         name=\"leaveType\"\n//                         value={leaveData.leaveType}\n//                         onChange={handleChange}\n//                         required\n//                       >\n//                         <option value=\"Annual\">Annual Leave</option>\n//                         <option value=\"Sick\">Sick Leave</option>\n//                         <option value=\"Maternity\">Maternity Leave</option>\n//                         <option value=\"Unpaid\">Unpaid Leave</option>\n//                       </Form.Control>\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"startDate\" className=\"mb-3\">\n//                       <Form.Label>Start Date</Form.Label>\n//                       <Form.Control\n//                         type=\"date\"\n//                         name=\"startDate\"\n//                         onChange={handleChange}\n//                         required\n//                       />\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"endDate\" className=\"mb-3\">\n//                       <Form.Label>End Date</Form.Label>\n//                       <Form.Control\n//                         type=\"date\"\n//                         name=\"endDate\"\n//                         onChange={handleChange}\n//                         required\n//                       />\n//                     </Form.Group>\n\n//                     <p>\n//                       <strong>Days of Leave:</strong> {numberOfDays} days\n//                     </p>\n\n//                     <Button type=\"submit\" disabled={loading}>\n//                       {loading ? (\n//                         <Spinner animation=\"border\" size=\"sm\" />\n//                       ) : (\n//                         \"Submit Leave\"\n//                       )}\n//                     </Button>\n//                   </Form>\n//                 </Card.Body>\n//               </Card>\n\n//               <Card className=\"mb-4\">\n//                 <Card.Body>\n//                   <Card.Title>Leave Balance</Card.Title>\n//                   <p>\n//                     <strong>Annual Leave:</strong>{\" \"}\n//                     {leaveBalance.annualLeaveBalance} days\n//                   </p>\n//                   <p>\n//                     <strong>Sick Leave:</strong> {leaveBalance.sickLeaveBalance}{\" \"}\n//                     days\n//                   </p>\n//                   <p>\n//                     <strong>Remaining Annual Leave:</strong>{\" \"}\n//                     {leaveBalance.annualLeaveBalance} days\n//                   </p>\n//                 </Card.Body>\n//               </Card>\n//             </div>\n\n//             <Card className=\"leave-history mb-4\">\n//               <Card.Body>\n//                 <Card.Title>Leave History</Card.Title>\n//                 <Table striped bordered>\n//                   <thead>\n//                     <tr>\n//                       <th>Leave Type</th>\n//                       <th>Start Date</th>\n//                       <th>End Date</th>\n//                       <th>Days</th>\n//                       <th>Status</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {leaveHistory.length > 0 ? (\n//                       leaveHistory.map((leave) => (\n//                         <tr key={leave._id}>\n//                           <td>{leave.leaveType}</td>\n//                           <td>\n//                             {new Date(leave.startDate).toLocaleDateString()}\n//                           </td>\n//                           <td>\n//                             {new Date(leave.endDate).toLocaleDateString()}\n//                           </td>\n//                           <td>{leave.numberOfDays} days</td>\n//                           <td>{leave.status}</td>\n//                         </tr>\n//                       ))\n//                     ) : (\n//                       <tr>\n//                         <td colSpan=\"5\" className=\"text-center\">\n//                           No leave history available.\n//                         </td>\n//                       </tr>\n//                     )}\n//                   </tbody>\n//                 </Table>\n//               </Card.Body>\n//             </Card>\n//           </div>\n//         </Col>\n\n//         {/* Sidebar for Upcoming Events */}\n//         <Col md={3} className=\"sidebar-right\">\n//           <Card>\n//             <Card.Body>\n//               <Card.Title>Upcoming Events</Card.Title>\n//               <ul className=\"list-group list-group-flush\">\n//                 <li className=\"list-group-item\">Pending Leave Approvals</li>\n//                 <li className=\"list-group-item\">HR Training Sessions</li>\n//                 <li className=\"list-group-item\">Manager Meeting</li>\n//               </ul>\n//             </Card.Body>\n//           </Card>\n//         </Col>\n//       </Row>\n//     </Container>\n//   );\n// };\n\n// export default EmployeeLeave;\nvar _c;\n$RefreshReg$(_c, \"EmployeeLeave\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","EmployeeLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tebogoramolobeng/Documents/peopleconnect/frontend/src/employee/EmployeeLeave.js"],"sourcesContent":["import React from \"react\";\n\nconst EmployeeLeave = () => {\n  return <div>EmployeeLeave</div>;\n};\n\nexport default EmployeeLeave;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import {\n//   Form,\n//   Button,\n//   Container,\n//   Card,\n//   Spinner,\n//   Table,\n//   Row,\n//   Col,\n// } from \"react-bootstrap\";\n// import \"./Dashboard.css\"; // Assuming CSS is saved as EmployeeLeave.css\n\n// const EmployeeLeave = () => {\n//   const [leaveData, setLeaveData] = useState({\n//     leaveType: \"Annual\",\n//     startDate: \"\",\n//     endDate: \"\",\n//     reason: \"\",\n//   });\n//   const [file, setFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [numberOfDays, setNumberOfDays] = useState(0);\n//   const [leaveBalance, setLeaveBalance] = useState({\n//     annualLeaveBalance: 0,\n//     sickLeaveBalance: 0,\n//   });\n//   const [leaveHistory, setLeaveHistory] = useState([]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setLeaveData({ ...leaveData, [name]: value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   const calculateNumberOfDays = (start, end) => {\n//     const startDate = new Date(start);\n//     const endDate = new Date(end);\n//     const diffTime = Math.abs(endDate - startDate);\n//     return Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;\n//   };\n\n//   useEffect(() => {\n//     if (leaveData.startDate && leaveData.endDate) {\n//       setNumberOfDays(\n//         calculateNumberOfDays(leaveData.startDate, leaveData.endDate)\n//       );\n//     }\n//   }, [leaveData.startDate, leaveData.endDate]);\n\n//   const fetchLeaveData = async () => {\n//     try {\n//       const [balanceResponse, historyResponse] = await Promise.all([\n//         axios.get(\"http://localhost:5002/api/leaves/balance\", {\n//           headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n//         }),\n//         axios.get(\"http://localhost:5002/api/leaves/history\", {\n//           headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n//         }),\n//       ]);\n\n//       setLeaveBalance({\n//         annualLeaveBalance: balanceResponse.data.annualLeaveBalance,\n//         sickLeaveBalance: balanceResponse.data.sickLeaveBalance,\n//       });\n//       setLeaveHistory(historyResponse.data);\n//     } catch (error) {\n//       console.error(\"Error fetching leave data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchLeaveData();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(leaveData).forEach((key) =>\n//       formData.append(key, leaveData[key])\n//     );\n//     formData.append(\"numberOfDays\", numberOfDays);\n//     if (file) formData.append(\"document\", file);\n\n//     setLoading(true);\n//     try {\n//       await axios.post(\"http://localhost:5002/api/leaves/apply\", formData, {\n//         headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n//       });\n//       alert(\"Leave application submitted successfully\");\n//       await fetchLeaveData();\n//     } catch (error) {\n//       console.error(\"Error applying for leave:\", error);\n//     }\n//     setLoading(false);\n//   };\n\n//   return (\n//     <Container fluid className=\"leave-page\">\n//       <Row>\n//         {/* Main Content */}\n//         <Col md={9}>\n//           <div className=\"main-content\">\n//             <h2>Leave Management Dashboard</h2>\n\n//             <div className=\"leave-section\">\n//               <Card className=\"mb-4\">\n//                 <Card.Body>\n//                   <Card.Title>Apply for Leave</Card.Title>\n//                   <Form onSubmit={handleSubmit}>\n//                     <Form.Group controlId=\"leaveType\" className=\"mb-3\">\n//                       <Form.Label>Leave Type</Form.Label>\n//                       <Form.Control\n//                         as=\"select\"\n//                         name=\"leaveType\"\n//                         value={leaveData.leaveType}\n//                         onChange={handleChange}\n//                         required\n//                       >\n//                         <option value=\"Annual\">Annual Leave</option>\n//                         <option value=\"Sick\">Sick Leave</option>\n//                         <option value=\"Maternity\">Maternity Leave</option>\n//                         <option value=\"Unpaid\">Unpaid Leave</option>\n//                       </Form.Control>\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"startDate\" className=\"mb-3\">\n//                       <Form.Label>Start Date</Form.Label>\n//                       <Form.Control\n//                         type=\"date\"\n//                         name=\"startDate\"\n//                         onChange={handleChange}\n//                         required\n//                       />\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"endDate\" className=\"mb-3\">\n//                       <Form.Label>End Date</Form.Label>\n//                       <Form.Control\n//                         type=\"date\"\n//                         name=\"endDate\"\n//                         onChange={handleChange}\n//                         required\n//                       />\n//                     </Form.Group>\n\n//                     <p>\n//                       <strong>Days of Leave:</strong> {numberOfDays} days\n//                     </p>\n\n//                     <Button type=\"submit\" disabled={loading}>\n//                       {loading ? (\n//                         <Spinner animation=\"border\" size=\"sm\" />\n//                       ) : (\n//                         \"Submit Leave\"\n//                       )}\n//                     </Button>\n//                   </Form>\n//                 </Card.Body>\n//               </Card>\n\n//               <Card className=\"mb-4\">\n//                 <Card.Body>\n//                   <Card.Title>Leave Balance</Card.Title>\n//                   <p>\n//                     <strong>Annual Leave:</strong>{\" \"}\n//                     {leaveBalance.annualLeaveBalance} days\n//                   </p>\n//                   <p>\n//                     <strong>Sick Leave:</strong> {leaveBalance.sickLeaveBalance}{\" \"}\n//                     days\n//                   </p>\n//                   <p>\n//                     <strong>Remaining Annual Leave:</strong>{\" \"}\n//                     {leaveBalance.annualLeaveBalance} days\n//                   </p>\n//                 </Card.Body>\n//               </Card>\n//             </div>\n\n//             <Card className=\"leave-history mb-4\">\n//               <Card.Body>\n//                 <Card.Title>Leave History</Card.Title>\n//                 <Table striped bordered>\n//                   <thead>\n//                     <tr>\n//                       <th>Leave Type</th>\n//                       <th>Start Date</th>\n//                       <th>End Date</th>\n//                       <th>Days</th>\n//                       <th>Status</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {leaveHistory.length > 0 ? (\n//                       leaveHistory.map((leave) => (\n//                         <tr key={leave._id}>\n//                           <td>{leave.leaveType}</td>\n//                           <td>\n//                             {new Date(leave.startDate).toLocaleDateString()}\n//                           </td>\n//                           <td>\n//                             {new Date(leave.endDate).toLocaleDateString()}\n//                           </td>\n//                           <td>{leave.numberOfDays} days</td>\n//                           <td>{leave.status}</td>\n//                         </tr>\n//                       ))\n//                     ) : (\n//                       <tr>\n//                         <td colSpan=\"5\" className=\"text-center\">\n//                           No leave history available.\n//                         </td>\n//                       </tr>\n//                     )}\n//                   </tbody>\n//                 </Table>\n//               </Card.Body>\n//             </Card>\n//           </div>\n//         </Col>\n\n//         {/* Sidebar for Upcoming Events */}\n//         <Col md={3} className=\"sidebar-right\">\n//           <Card>\n//             <Card.Body>\n//               <Card.Title>Upcoming Events</Card.Title>\n//               <ul className=\"list-group list-group-flush\">\n//                 <li className=\"list-group-item\">Pending Leave Approvals</li>\n//                 <li className=\"list-group-item\">HR Training Sessions</li>\n//                 <li className=\"list-group-item\">Manager Meeting</li>\n//               </ul>\n//             </Card.Body>\n//           </Card>\n//         </Col>\n//       </Row>\n//     </Container>\n//   );\n// };\n\n// export default EmployeeLeave;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,oBAAOD,OAAA;IAAAE,QAAA,EAAK;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACjC,CAAC;AAACC,EAAA,GAFIN,aAAa;AAInB,eAAeA,aAAa;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}