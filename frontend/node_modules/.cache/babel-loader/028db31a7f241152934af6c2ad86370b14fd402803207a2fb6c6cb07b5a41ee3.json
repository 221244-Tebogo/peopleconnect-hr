{"ast":null,"code":"var _jsxFileName = \"/Users/tebogoramolobeng/Documents/peopleconnect/frontend/src/hr/EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport HRSidebar from \"../components/sidebar/HRSidebar\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [managers, setManagers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [newEmployee, setNewEmployee] = useState({\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    role: \"employee\",\n    manager: \"\"\n  });\n  useEffect(() => {\n    fetchEmployees();\n    fetchManagers();\n  }, []);\n  const fetchEmployees = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\"http://localhost:5002/api/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEmployees(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching employees:\", error);\n      setError(\"Failed to load employee data.\");\n    }\n  };\n  const fetchManagers = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\"http://localhost:5002/api/users?role=manager\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setManagers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching managers:\", error);\n    }\n  };\n\n  // CRUD Operations\n  const handleCreateOrUpdateEmployee = async () => {\n    const url = editingEmployee ? `http://localhost:5002/api/users/${editingEmployee._id}` : \"http://localhost:5002/api/users\";\n    const method = editingEmployee ? \"put\" : \"post\";\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios[method](url, newEmployee, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEmployees(prev => editingEmployee ? prev.map(emp => emp._id === response.data._id ? response.data : emp) : [...prev, response.data]);\n      setShowModal(false);\n      setNewEmployee({\n        name: \"\",\n        surname: \"\",\n        email: \"\",\n        role: \"employee\",\n        manager: \"\"\n      });\n      setEditingEmployee(null);\n    } catch (error) {\n      console.error(`Error ${editingEmployee ? \"updating\" : \"creating\"} employee:`, error);\n    }\n  };\n  const handleDelete = async employeeId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:5002/api/users/${employeeId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEmployees(prev => prev.filter(emp => emp._id !== employeeId));\n    } catch (error) {\n      console.error(\"Error deleting employee:\", error);\n    }\n  };\n\n  // Manager Assignment\n  const handleAssignManager = async (employeeId, managerId) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`http://localhost:5002/api/users/${employeeId}/assign-manager`, {\n        managerId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEmployees(prevEmployees => prevEmployees.map(emp => emp._id === employeeId ? {\n        ...emp,\n        manager: managerId\n      } : emp));\n    } catch (error) {\n      console.error(\"Error assigning manager:\", error);\n      alert(\"Failed to assign manager. Please check the server endpoint.\");\n    }\n  };\n  const openModalForEdit = employee => {\n    setNewEmployee(employee);\n    setEditingEmployee(employee);\n    setShowModal(true);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HRSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employee List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setShowModal(true),\n        children: \"Add New Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-hover mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.surname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: employee.manager || \"\",\n                onChange: e => handleAssignManager(employee._id, e.target.value),\n                className: \"form-select\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Unassigned\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this), managers.map(manager => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: manager._id,\n                  children: manager.name\n                }, manager._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"warning\",\n                onClick: () => openModalForEdit(employee),\n                size: \"sm\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: () => handleDelete(employee._id),\n                size: \"sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, employee._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showModal,\n        onHide: () => setShowModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: editingEmployee ? \"Edit Employee\" : \"Add New Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"First Name\",\n            value: newEmployee.name,\n            onChange: e => setNewEmployee({\n              ...newEmployee,\n              name: e.target.value\n            }),\n            className: \"form-control mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Surname\",\n            value: newEmployee.surname,\n            onChange: e => setNewEmployee({\n              ...newEmployee,\n              surname: e.target.value\n            }),\n            className: \"form-control mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: newEmployee.email,\n            onChange: e => setNewEmployee({\n              ...newEmployee,\n              email: e.target.value\n            }),\n            className: \"form-control mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newEmployee.role,\n            onChange: e => setNewEmployee({\n              ...newEmployee,\n              role: e.target.value\n            }),\n            className: \"form-control mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"manager\",\n              children: \"Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hr\",\n              children: \"HR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setShowModal(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleCreateOrUpdateEmployee,\n            children: editingEmployee ? \"Update Employee\" : \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeList, \"p1CsC9E3hwiz51Fh8aO8iu1AS+0=\");\n_c = EmployeeList;\nexport default EmployeeList;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import HRSidebar from \"../components/sidebar/HRSidebar\";\n// import { Modal, Button } from \"react-bootstrap\";\n\n// const EmployeeList = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [editEmployee, setEditEmployee] = useState(null);\n//   const [userRole, setUserRole] = useState(\"\");\n//   const [showModal, setShowModal] = useState(false);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: \"\",\n//     surname: \"\",\n//     email: \"\",\n//     role: \"employee\",\n//   });\n\n//   // Pagination state\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const employeesPerPage = 10;\n\n//   // Fetch employees on mount\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const token = localStorage.getItem(\"token\");\n//         const response = await axios.get(\"http://localhost:5002/api/users\", {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setEmployees(response.data);\n//         setUserRole(localStorage.getItem(\"role\"));\n//       } catch (err) {\n//         console.error(\"Error fetching employees:\", err);\n//         setError(\"Failed to load employee data.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchEmployees();\n//   }, []);\n\n//   // Handle modal show/hide\n//   const handleModalShow = () => setShowModal(true);\n//   const handleModalClose = () => setShowModal(false);\n\n//   // Handle adding a new employee\n//   const handleAddEmployee = async () => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const response = await axios.post(\n//         \"http://localhost:5002/api/users\",\n//         newEmployee,\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       setEmployees([...employees, response.data]);\n//       handleModalClose();\n//       setNewEmployee({ name: \"\", surname: \"\", email: \"\", role: \"employee\" });\n//     } catch (error) {\n//       console.error(\"Error adding employee:\", error);\n//       alert(\"Failed to add employee.\");\n//     }\n//   };\n\n//   // Handle deleting an employee\n//   const handleDelete = async (id) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       await axios.delete(`http://localhost:5002/api/users/${id}`, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       setEmployees(employees.filter((emp) => emp._id !== id));\n//     } catch (err) {\n//       console.error(\"Error deleting employee:\", err);\n//       alert(\"Failed to delete employee.\");\n//     }\n//   };\n\n//   // Pagination handlers\n//   const indexOfLastEmployee = currentPage * employeesPerPage;\n//   const indexOfFirstEmployee = indexOfLastEmployee - employeesPerPage;\n//   const currentEmployees = employees.slice(\n//     indexOfFirstEmployee,\n//     indexOfLastEmployee\n//   );\n\n//   const handlePrevPage = () => setCurrentPage((prev) => Math.max(prev - 1, 1));\n//   const handleNextPage = () => setCurrentPage((prev) => prev + 1);\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   return (\n//     <div>\n//       <HRSidebar />\n//       <div className=\"container\">\n//         <h2>Employee List</h2>\n\n//         {/* Add Employee Button */}\n//         {userRole === \"hr\" && (\n//           <Button variant=\"primary\" onClick={handleModalShow}>\n//             Add New Employee\n//           </Button>\n//         )}\n\n//         {/* Employee List Table */}\n//         <table className=\"table table-striped table-hover mt-3\">\n//           <thead>\n//             <tr>\n//               <th>Name</th>\n//               <th>Surname</th>\n//               <th>Email</th>\n//               <th>Role</th>\n//               {userRole === \"hr\" && <th>Actions</th>}\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {currentEmployees.map((employee) => (\n//               <tr key={employee._id}>\n//                 <td>{employee.name}</td>\n//                 <td>{employee.surname}</td>\n//                 <td>{employee.email}</td>\n//                 <td>{employee.role}</td>\n//                 {userRole === \"hr\" && (\n//                   <td>\n//                     <Button\n//                       variant=\"warning\"\n//                       onClick={() => setEditEmployee(employee)}\n//                       size=\"sm\"\n//                     >\n//                       Edit\n//                     </Button>\n//                     <Button\n//                       variant=\"danger\"\n//                       onClick={() => handleDelete(employee._id)}\n//                       size=\"sm\"\n//                     >\n//                       Delete\n//                     </Button>\n//                   </td>\n//                 )}\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n\n//         {/* Pagination Controls */}\n//         <div className=\"d-flex justify-content-between\">\n//           <Button onClick={handlePrevPage} disabled={currentPage === 1}>\n//             Previous\n//           </Button>\n//           <span>Page {currentPage}</span>\n//           <Button\n//             onClick={handleNextPage}\n//             disabled={currentEmployees.length < employeesPerPage}\n//           >\n//             Next\n//           </Button>\n//         </div>\n\n//         {/* Modal for Adding Employee */}\n//         <Modal show={showModal} onHide={handleModalClose}>\n//           <Modal.Header closeButton>\n//             <Modal.Title>Add New Employee</Modal.Title>\n//           </Modal.Header>\n//           <Modal.Body>\n//             <input\n//               type=\"text\"\n//               placeholder=\"First Name\"\n//               value={newEmployee.name}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, name: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Surname\"\n//               value={newEmployee.surname}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, surname: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               value={newEmployee.email}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, email: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             />\n//             <select\n//               value={newEmployee.role}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, role: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             >\n//               <option value=\"employee\">Employee</option>\n//               <option value=\"manager\">Manager</option>\n//               <option value=\"hr\">HR</option>\n//             </select>\n//           </Modal.Body>\n//           <Modal.Footer>\n//             <Button variant=\"secondary\" onClick={handleModalClose}>\n//               Close\n//             </Button>\n//             <Button variant=\"primary\" onClick={handleAddEmployee}>\n//               Add Employee\n//             </Button>\n//           </Modal.Footer>\n//         </Modal>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","HRSidebar","Modal","Button","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","managers","setManagers","loading","setLoading","error","setError","showModal","setShowModal","editingEmployee","setEditingEmployee","newEmployee","setNewEmployee","name","surname","email","role","manager","fetchEmployees","fetchManagers","token","localStorage","getItem","response","get","headers","Authorization","data","console","handleCreateOrUpdateEmployee","url","_id","method","prev","map","emp","handleDelete","employeeId","delete","filter","handleAssignManager","managerId","put","prevEmployees","alert","openModalForEdit","employee","children","fileName","_jsxFileName","lineNumber","columnNumber","className","variant","onClick","value","onChange","e","target","size","show","onHide","Header","closeButton","Title","Body","type","placeholder","Footer","_c","$RefreshReg$"],"sources":["/Users/tebogoramolobeng/Documents/peopleconnect/frontend/src/hr/EmployeeList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport HRSidebar from \"../components/sidebar/HRSidebar\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst EmployeeList = () => {\n  const [employees, setEmployees] = useState([]);\n  const [managers, setManagers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [newEmployee, setNewEmployee] = useState({\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    role: \"employee\",\n    manager: \"\",\n  });\n\n  useEffect(() => {\n    fetchEmployees();\n    fetchManagers();\n  }, []);\n\n  const fetchEmployees = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\"http://localhost:5002/api/users\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setEmployees(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching employees:\", error);\n      setError(\"Failed to load employee data.\");\n    }\n  };\n\n  const fetchManagers = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\n        \"http://localhost:5002/api/users?role=manager\",\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      setManagers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching managers:\", error);\n    }\n  };\n\n  // CRUD Operations\n  const handleCreateOrUpdateEmployee = async () => {\n    const url = editingEmployee\n      ? `http://localhost:5002/api/users/${editingEmployee._id}`\n      : \"http://localhost:5002/api/users\";\n    const method = editingEmployee ? \"put\" : \"post\";\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios[method](url, newEmployee, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setEmployees((prev) =>\n        editingEmployee\n          ? prev.map((emp) =>\n              emp._id === response.data._id ? response.data : emp\n            )\n          : [...prev, response.data]\n      );\n      setShowModal(false);\n      setNewEmployee({\n        name: \"\",\n        surname: \"\",\n        email: \"\",\n        role: \"employee\",\n        manager: \"\",\n      });\n      setEditingEmployee(null);\n    } catch (error) {\n      console.error(\n        `Error ${editingEmployee ? \"updating\" : \"creating\"} employee:`,\n        error\n      );\n    }\n  };\n\n  const handleDelete = async (employeeId) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:5002/api/users/${employeeId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setEmployees((prev) => prev.filter((emp) => emp._id !== employeeId));\n    } catch (error) {\n      console.error(\"Error deleting employee:\", error);\n    }\n  };\n\n  // Manager Assignment\n  const handleAssignManager = async (employeeId, managerId) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(\n        `http://localhost:5002/api/users/${employeeId}/assign-manager`,\n        { managerId },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      setEmployees((prevEmployees) =>\n        prevEmployees.map((emp) =>\n          emp._id === employeeId ? { ...emp, manager: managerId } : emp\n        )\n      );\n    } catch (error) {\n      console.error(\"Error assigning manager:\", error);\n      alert(\"Failed to assign manager. Please check the server endpoint.\");\n    }\n  };\n\n  const openModalForEdit = (employee) => {\n    setNewEmployee(employee);\n    setEditingEmployee(employee);\n    setShowModal(true);\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div>\n      <HRSidebar />\n      <div className=\"container\">\n        <h2>Employee List</h2>\n        <Button variant=\"primary\" onClick={() => setShowModal(true)}>\n          Add New Employee\n        </Button>\n\n        <table className=\"table table-striped table-hover mt-3\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Surname</th>\n              <th>Email</th>\n              <th>Role</th>\n              <th>Manager</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {employees.map((employee) => (\n              <tr key={employee._id}>\n                <td>{employee.name}</td>\n                <td>{employee.surname}</td>\n                <td>{employee.email}</td>\n                <td>{employee.role}</td>\n                <td>\n                  <select\n                    value={employee.manager || \"\"}\n                    onChange={(e) =>\n                      handleAssignManager(employee._id, e.target.value)\n                    }\n                    className=\"form-select\"\n                  >\n                    <option value=\"\">Unassigned</option>\n                    {managers.map((manager) => (\n                      <option key={manager._id} value={manager._id}>\n                        {manager.name}\n                      </option>\n                    ))}\n                  </select>\n                </td>\n                <td>\n                  <Button\n                    variant=\"warning\"\n                    onClick={() => openModalForEdit(employee)}\n                    size=\"sm\"\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => handleDelete(employee._id)}\n                    size=\"sm\"\n                  >\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <Modal show={showModal} onHide={() => setShowModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              {editingEmployee ? \"Edit Employee\" : \"Add New Employee\"}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <input\n              type=\"text\"\n              placeholder=\"First Name\"\n              value={newEmployee.name}\n              onChange={(e) =>\n                setNewEmployee({ ...newEmployee, name: e.target.value })\n              }\n              className=\"form-control mb-2\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Surname\"\n              value={newEmployee.surname}\n              onChange={(e) =>\n                setNewEmployee({ ...newEmployee, surname: e.target.value })\n              }\n              className=\"form-control mb-2\"\n            />\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={newEmployee.email}\n              onChange={(e) =>\n                setNewEmployee({ ...newEmployee, email: e.target.value })\n              }\n              className=\"form-control mb-2\"\n            />\n            <select\n              value={newEmployee.role}\n              onChange={(e) =>\n                setNewEmployee({ ...newEmployee, role: e.target.value })\n              }\n              className=\"form-control mb-2\"\n            >\n              <option value=\"employee\">Employee</option>\n              <option value=\"manager\">Manager</option>\n              <option value=\"hr\">HR</option>\n            </select>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleCreateOrUpdateEmployee}>\n              {editingEmployee ? \"Update Employee\" : \"Add Employee\"}\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeList;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import HRSidebar from \"../components/sidebar/HRSidebar\";\n// import { Modal, Button } from \"react-bootstrap\";\n\n// const EmployeeList = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [editEmployee, setEditEmployee] = useState(null);\n//   const [userRole, setUserRole] = useState(\"\");\n//   const [showModal, setShowModal] = useState(false);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: \"\",\n//     surname: \"\",\n//     email: \"\",\n//     role: \"employee\",\n//   });\n\n//   // Pagination state\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const employeesPerPage = 10;\n\n//   // Fetch employees on mount\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const token = localStorage.getItem(\"token\");\n//         const response = await axios.get(\"http://localhost:5002/api/users\", {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setEmployees(response.data);\n//         setUserRole(localStorage.getItem(\"role\"));\n//       } catch (err) {\n//         console.error(\"Error fetching employees:\", err);\n//         setError(\"Failed to load employee data.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchEmployees();\n//   }, []);\n\n//   // Handle modal show/hide\n//   const handleModalShow = () => setShowModal(true);\n//   const handleModalClose = () => setShowModal(false);\n\n//   // Handle adding a new employee\n//   const handleAddEmployee = async () => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const response = await axios.post(\n//         \"http://localhost:5002/api/users\",\n//         newEmployee,\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       setEmployees([...employees, response.data]);\n//       handleModalClose();\n//       setNewEmployee({ name: \"\", surname: \"\", email: \"\", role: \"employee\" });\n//     } catch (error) {\n//       console.error(\"Error adding employee:\", error);\n//       alert(\"Failed to add employee.\");\n//     }\n//   };\n\n//   // Handle deleting an employee\n//   const handleDelete = async (id) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       await axios.delete(`http://localhost:5002/api/users/${id}`, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       setEmployees(employees.filter((emp) => emp._id !== id));\n//     } catch (err) {\n//       console.error(\"Error deleting employee:\", err);\n//       alert(\"Failed to delete employee.\");\n//     }\n//   };\n\n//   // Pagination handlers\n//   const indexOfLastEmployee = currentPage * employeesPerPage;\n//   const indexOfFirstEmployee = indexOfLastEmployee - employeesPerPage;\n//   const currentEmployees = employees.slice(\n//     indexOfFirstEmployee,\n//     indexOfLastEmployee\n//   );\n\n//   const handlePrevPage = () => setCurrentPage((prev) => Math.max(prev - 1, 1));\n//   const handleNextPage = () => setCurrentPage((prev) => prev + 1);\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   return (\n//     <div>\n//       <HRSidebar />\n//       <div className=\"container\">\n//         <h2>Employee List</h2>\n\n//         {/* Add Employee Button */}\n//         {userRole === \"hr\" && (\n//           <Button variant=\"primary\" onClick={handleModalShow}>\n//             Add New Employee\n//           </Button>\n//         )}\n\n//         {/* Employee List Table */}\n//         <table className=\"table table-striped table-hover mt-3\">\n//           <thead>\n//             <tr>\n//               <th>Name</th>\n//               <th>Surname</th>\n//               <th>Email</th>\n//               <th>Role</th>\n//               {userRole === \"hr\" && <th>Actions</th>}\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {currentEmployees.map((employee) => (\n//               <tr key={employee._id}>\n//                 <td>{employee.name}</td>\n//                 <td>{employee.surname}</td>\n//                 <td>{employee.email}</td>\n//                 <td>{employee.role}</td>\n//                 {userRole === \"hr\" && (\n//                   <td>\n//                     <Button\n//                       variant=\"warning\"\n//                       onClick={() => setEditEmployee(employee)}\n//                       size=\"sm\"\n//                     >\n//                       Edit\n//                     </Button>\n//                     <Button\n//                       variant=\"danger\"\n//                       onClick={() => handleDelete(employee._id)}\n//                       size=\"sm\"\n//                     >\n//                       Delete\n//                     </Button>\n//                   </td>\n//                 )}\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n\n//         {/* Pagination Controls */}\n//         <div className=\"d-flex justify-content-between\">\n//           <Button onClick={handlePrevPage} disabled={currentPage === 1}>\n//             Previous\n//           </Button>\n//           <span>Page {currentPage}</span>\n//           <Button\n//             onClick={handleNextPage}\n//             disabled={currentEmployees.length < employeesPerPage}\n//           >\n//             Next\n//           </Button>\n//         </div>\n\n//         {/* Modal for Adding Employee */}\n//         <Modal show={showModal} onHide={handleModalClose}>\n//           <Modal.Header closeButton>\n//             <Modal.Title>Add New Employee</Modal.Title>\n//           </Modal.Header>\n//           <Modal.Body>\n//             <input\n//               type=\"text\"\n//               placeholder=\"First Name\"\n//               value={newEmployee.name}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, name: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Surname\"\n//               value={newEmployee.surname}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, surname: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             />\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               value={newEmployee.email}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, email: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             />\n//             <select\n//               value={newEmployee.role}\n//               onChange={(e) =>\n//                 setNewEmployee({ ...newEmployee, role: e.target.value })\n//               }\n//               className=\"form-control mb-2\"\n//             >\n//               <option value=\"employee\">Employee</option>\n//               <option value=\"manager\">Manager</option>\n//               <option value=\"hr\">HR</option>\n//             </select>\n//           </Modal.Body>\n//           <Modal.Footer>\n//             <Button variant=\"secondary\" onClick={handleModalClose}>\n//               Close\n//             </Button>\n//             <Button variant=\"primary\" onClick={handleAddEmployee}>\n//               Add Employee\n//             </Button>\n//           </Modal.Footer>\n//         </Modal>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EmployeeList;\n"],"mappings":"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AC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrD,EAAA,CArPID,YAAY;AAAAwE,EAAA,GAAZxE,YAAY;AAuPlB,eAAeA,YAAY;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}