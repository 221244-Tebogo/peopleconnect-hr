{"ast":null,"code":"var _jsxFileName = \"/Users/tebogoramolobeng/Documents/peopleconnect/frontend/src/manager/TaskManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskItem from \"../components/TaskItem\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskManagement() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const [assignedEmployee, setAssignedEmployee] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n\n  // Fetch tasks and employees on component mount\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5002/api/tasks\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        setTasks(response.data);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    const fetchEmployees = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5002/api/users\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        setEmployees(response.data);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n    fetchTasks();\n    fetchEmployees();\n  }, []);\n\n  // Task CRUD operations\n  const addTask = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5002/api/tasks/create\", {\n        text: newTask,\n        employee: assignedEmployee\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setTasks([...tasks, response.data]);\n      setNewTask(\"\");\n      setAssignedEmployee(\"\");\n      setShowModal(false);\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n  const toggleComplete = async taskId => {\n    try {\n      const response = await axios.patch(`http://localhost:5002/api/tasks/complete/${taskId}`, {}, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setTasks(tasks.map(task => task._id === taskId ? response.data : task));\n    } catch (error) {\n      console.error(\"Error toggling task complete:\", error);\n    }\n  };\n  const deleteTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:5002/api/tasks/${taskId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setTasks(tasks.filter(task => task._id !== taskId));\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n  const addComment = async (taskId, comment) => {\n    try {\n      const response = await axios.patch(`http://localhost:5002/api/tasks/comment/${taskId}`, {\n        comment\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setTasks(tasks.map(task => task._id === taskId ? response.data : task));\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Assignment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: assignedEmployee,\n        onChange: e => setAssignedEmployee(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Assign to Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), employees.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: emp._id,\n          children: emp.name\n        }, emp._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Save Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        onToggleComplete: () => toggleComplete(task._id),\n        onDelete: () => deleteTask(task._id),\n        onAddComment: comment => addComment(task._id, comment)\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskManagement, \"BCLdNLJFKKPfIm8+dtf6vl06sRU=\");\n_c = TaskManagement;\nexport default TaskManagement;\nvar _c;\n$RefreshReg$(_c, \"TaskManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskItem","Modal","jsxDEV","_jsxDEV","TaskManagement","_s","tasks","setTasks","employees","setEmployees","newTask","setNewTask","assignedEmployee","setAssignedEmployee","showModal","setShowModal","fetchTasks","response","get","headers","Authorization","localStorage","getItem","data","error","console","fetchEmployees","addTask","post","text","employee","toggleComplete","taskId","patch","map","task","_id","deleteTask","delete","filter","addComment","comment","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClose","type","value","onChange","e","target","placeholder","emp","name","onToggleComplete","onDelete","onAddComment","_c","$RefreshReg$"],"sources":["/Users/tebogoramolobeng/Documents/peopleconnect/frontend/src/manager/TaskManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskItem from \"../components/TaskItem\";\nimport Modal from \"../components/Modal\";\n\nfunction TaskManagement() {\n  const [tasks, setTasks] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const [assignedEmployee, setAssignedEmployee] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n\n  // Fetch tasks and employees on component mount\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5002/api/tasks\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        });\n        setTasks(response.data);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n\n    const fetchEmployees = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5002/api/users\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        });\n        setEmployees(response.data);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n\n    fetchTasks();\n    fetchEmployees();\n  }, []);\n\n  // Task CRUD operations\n  const addTask = async () => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:5002/api/tasks/create\",\n        { text: newTask, employee: assignedEmployee },\n        {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        }\n      );\n      setTasks([...tasks, response.data]);\n      setNewTask(\"\");\n      setAssignedEmployee(\"\");\n      setShowModal(false);\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  const toggleComplete = async (taskId) => {\n    try {\n      const response = await axios.patch(\n        `http://localhost:5002/api/tasks/complete/${taskId}`,\n        {},\n        {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        }\n      );\n      setTasks(\n        tasks.map((task) => (task._id === taskId ? response.data : task))\n      );\n    } catch (error) {\n      console.error(\"Error toggling task complete:\", error);\n    }\n  };\n\n  const deleteTask = async (taskId) => {\n    try {\n      await axios.delete(`http://localhost:5002/api/tasks/${taskId}`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n      });\n      setTasks(tasks.filter((task) => task._id !== taskId));\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n\n  const addComment = async (taskId, comment) => {\n    try {\n      const response = await axios.patch(\n        `http://localhost:5002/api/tasks/comment/${taskId}`,\n        { comment },\n        {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        }\n      );\n      setTasks(\n        tasks.map((task) => (task._id === taskId ? response.data : task))\n      );\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Task Assignment</h1>\n      <button onClick={() => setShowModal(true)}>Add New Task</button>\n\n      {/* Task Creation Modal */}\n      {showModal && (\n        <Modal onClose={() => setShowModal(false)}>\n          <h2>Create New Task</h2>\n          <input\n            type=\"text\"\n            value={newTask}\n            onChange={(e) => setNewTask(e.target.value)}\n            placeholder=\"Task Description\"\n          />\n          <select\n            value={assignedEmployee}\n            onChange={(e) => setAssignedEmployee(e.target.value)}\n          >\n            <option value=\"\">Assign to Employee</option>\n            {employees.map((emp) => (\n              <option key={emp._id} value={emp._id}>\n                {emp.name}\n              </option>\n            ))}\n          </select>\n          <button onClick={addTask}>Save Task</button>\n        </Modal>\n      )}\n\n      {/* Display Task List */}\n      <ul>\n        {tasks.map((task) => (\n          <TaskItem\n            key={task._id}\n            task={task}\n            onToggleComplete={() => toggleComplete(task._id)}\n            onDelete={() => deleteTask(task._id)}\n            onAddComment={(comment) => addComment(task._id, comment)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TaskManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}