{"ast":null,"code":"const express = require(\"express\");\nconst multer = require(\"multer\");\nconst auth = require(\"../middleware/auth\");\nconst Leave = require(\"../models/Leave\");\nconst User = require(\"../models/User\");\nconst {\n  calculateLeaveBalance\n} = require(\"../helpers/leaveCalculations\");\nconst router = express.Router();\nconst upload = multer({\n  dest: \"public/leave-docs/\"\n});\n\n// Calculate days between two dates\nconst calculateDaysBetween = (start, end) => {\n  const startDate = new Date(start);\n  const endDate = new Date(end);\n  const diffTime = Math.abs(endDate - startDate);\n  return Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;\n};\n\n// Apply for leave\nrouter.post(\"/apply\", auth, upload.single(\"document\"), async (req, res) => {\n  const {\n    leaveType,\n    startDate,\n    endDate,\n    reason\n  } = req.body;\n  const documentUrl = req.file ? `/leave-docs/${req.file.filename}` : null;\n  try {\n    const numberOfDays = calculateDaysBetween(startDate, endDate);\n    const leaveApplication = new Leave({\n      employeeId: req.user.id,\n      leaveType,\n      startDate,\n      endDate,\n      reason,\n      documentUrl,\n      status: \"Pending\",\n      numberOfDays\n    });\n    await leaveApplication.save();\n    res.json({\n      leaveApplication,\n      message: `Leave application submitted for ${numberOfDays} days`\n    });\n  } catch (error) {\n    console.error(\"Error applying for leave:\", error.message);\n    res.status(500).send(\"Server Error\");\n  }\n});\n\n// Route to get leave balance\nrouter.get(\"/balance\", auth, async (req, res) => {\n  try {\n    if (!req.user || !req.user._id) {\n      return res.status(400).json({\n        error: \"User authentication failed.\"\n      });\n    }\n    const userId = req.user._id;\n    const user = await User.findById(userId);\n    if (!user) {\n      return res.status(404).json({\n        error: \"User not found\"\n      });\n    }\n\n    // Calculate leave balance with default 15 days annual leave for new users\n    let leaveBalance = calculateLeaveBalance(user.userType, user.startDate);\n\n    // Retrieve user's leave history for approved leaves and deduct from balance\n    const approvedLeaves = await Leave.find({\n      employeeId: userId,\n      status: \"Approved\",\n      leaveType: \"Annual\"\n    });\n    const totalApprovedDays = approvedLeaves.reduce((total, leave) => total + leave.numberOfDays, 0);\n    leaveBalance.annualLeaveBalance -= totalApprovedDays; // Deduct used leave\n\n    res.json(leaveBalance);\n  } catch (error) {\n    console.error(\"Error fetching leave balance:\", error);\n    res.status(500).json({\n      error: \"Failed to fetch leave balance\"\n    });\n  }\n});\n\n// Approve or decline leave\nrouter.put(\"/review/:id\", auth, async (req, res) => {\n  const {\n    status\n  } = req.body;\n  try {\n    const leaveApplication = await Leave.findById(req.params.id).populate(\"employeeId\");\n    if (!leaveApplication) {\n      return res.status(404).json({\n        msg: \"Leave application not found\"\n      });\n    }\n    leaveApplication.status = status;\n    if (status === \"Approved\" && leaveApplication.leaveType === \"Annual\") {\n      // Deduct from user's leave balance\n      const user = await User.findById(leaveApplication.employeeId._id);\n      const leaveBalance = calculateLeaveBalance(user.userType, user.startDate);\n\n      // Calculate new annual leave balance after deduction\n      const newAnnualLeaveBalance = leaveBalance.annualLeaveBalance - leaveApplication.numberOfDays;\n      await User.findByIdAndUpdate(user._id, {\n        annualLeaveBalance: newAnnualLeaveBalance\n      });\n    }\n    await leaveApplication.save();\n    res.json({\n      msg: `Leave ${status.toLowerCase()} successfully`\n    });\n  } catch (error) {\n    console.error(\"Error reviewing leave:\", error.message);\n    res.status(500).send(\"Server Error\");\n  }\n});\nmodule.exports = router;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import {\n//   Form,\n//   Button,\n//   Container,\n//   Card,\n//   Spinner,\n//   Table,\n//   Row,\n//   Col,\n// } from \"react-bootstrap\";\n// import \"./Dashboard.css\"; // Assuming CSS is saved as EmployeeLeave.css\n\n// const EmployeeLeave = () => {\n//   const [leaveData, setLeaveData] = useState({\n//     leaveType: \"Annual\",\n//     startDate: \"\",\n//     endDate: \"\",\n//     reason: \"\",\n//   });\n//   const [file, setFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [numberOfDays, setNumberOfDays] = useState(0);\n//   const [leaveBalance, setLeaveBalance] = useState({\n//     annualLeaveBalance: 0,\n//     sickLeaveBalance: 0,\n//   });\n//   const [leaveHistory, setLeaveHistory] = useState([]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setLeaveData({ ...leaveData, [name]: value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   const calculateNumberOfDays = (start, end) => {\n//     const startDate = new Date(start);\n//     const endDate = new Date(end);\n//     const diffTime = Math.abs(endDate - startDate);\n//     return Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;\n//   };\n\n//   useEffect(() => {\n//     if (leaveData.startDate && leaveData.endDate) {\n//       setNumberOfDays(\n//         calculateNumberOfDays(leaveData.startDate, leaveData.endDate)\n//       );\n//     }\n//   }, [leaveData.startDate, leaveData.endDate]);\n\n//   const fetchLeaveData = async () => {\n//     try {\n//       const [balanceResponse, historyResponse] = await Promise.all([\n//         axios.get(\"http://localhost:5002/api/leaves/balance\", {\n//           headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n//         }),\n//         axios.get(\"http://localhost:5002/api/leaves/history\", {\n//           headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n//         }),\n//       ]);\n\n//       setLeaveBalance({\n//         annualLeaveBalance: balanceResponse.data.annualLeaveBalance,\n//         sickLeaveBalance: balanceResponse.data.sickLeaveBalance,\n//       });\n//       setLeaveHistory(historyResponse.data);\n//     } catch (error) {\n//       console.error(\"Error fetching leave data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchLeaveData();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(leaveData).forEach((key) =>\n//       formData.append(key, leaveData[key])\n//     );\n//     formData.append(\"numberOfDays\", numberOfDays);\n//     if (file) formData.append(\"document\", file);\n\n//     setLoading(true);\n//     try {\n//       await axios.post(\"http://localhost:5002/api/leaves/apply\", formData, {\n//         headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n//       });\n//       alert(\"Leave application submitted successfully\");\n//       await fetchLeaveData();\n//     } catch (error) {\n//       console.error(\"Error applying for leave:\", error);\n//     }\n//     setLoading(false);\n//   };\n\n//   return (\n//     <Container fluid className=\"leave-page\">\n//       <Row>\n//         {/* Main Content */}\n//         <Col md={9}>\n//           <div className=\"main-content\">\n//             <h2>Leave Management Dashboard</h2>\n\n//             <div className=\"leave-section\">\n//               <Card className=\"mb-4\">\n//                 <Card.Body>\n//                   <Card.Title>Apply for Leave</Card.Title>\n//                   <Form onSubmit={handleSubmit}>\n//                     <Form.Group controlId=\"leaveType\" className=\"mb-3\">\n//                       <Form.Label>Leave Type</Form.Label>\n//                       <Form.Control\n//                         as=\"select\"\n//                         name=\"leaveType\"\n//                         value={leaveData.leaveType}\n//                         onChange={handleChange}\n//                         required\n//                       >\n//                         <option value=\"Annual\">Annual Leave</option>\n//                         <option value=\"Sick\">Sick Leave</option>\n//                         <option value=\"Maternity\">Maternity Leave</option>\n//                         <option value=\"Unpaid\">Unpaid Leave</option>\n//                       </Form.Control>\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"startDate\" className=\"mb-3\">\n//                       <Form.Label>Start Date</Form.Label>\n//                       <Form.Control\n//                         type=\"date\"\n//                         name=\"startDate\"\n//                         onChange={handleChange}\n//                         required\n//                       />\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"endDate\" className=\"mb-3\">\n//                       <Form.Label>End Date</Form.Label>\n//                       <Form.Control\n//                         type=\"date\"\n//                         name=\"endDate\"\n//                         onChange={handleChange}\n//                         required\n//                       />\n//                     </Form.Group>\n\n//                     <p>\n//                       <strong>Days of Leave:</strong> {numberOfDays} days\n//                     </p>\n\n//                     <Button type=\"submit\" disabled={loading}>\n//                       {loading ? (\n//                         <Spinner animation=\"border\" size=\"sm\" />\n//                       ) : (\n//                         \"Submit Leave\"\n//                       )}\n//                     </Button>\n//                   </Form>\n//                 </Card.Body>\n//               </Card>\n\n//               <Card className=\"mb-4\">\n//                 <Card.Body>\n//                   <Card.Title>Leave Balance</Card.Title>\n//                   <p>\n//                     <strong>Annual Leave:</strong>{\" \"}\n//                     {leaveBalance.annualLeaveBalance} days\n//                   </p>\n//                   <p>\n//                     <strong>Sick Leave:</strong> {leaveBalance.sickLeaveBalance}{\" \"}\n//                     days\n//                   </p>\n//                   <p>\n//                     <strong>Remaining Annual Leave:</strong>{\" \"}\n//                     {leaveBalance.annualLeaveBalance} days\n//                   </p>\n//                 </Card.Body>\n//               </Card>\n//             </div>\n\n//             <Card className=\"leave-history mb-4\">\n//               <Card.Body>\n//                 <Card.Title>Leave History</Card.Title>\n//                 <Table striped bordered>\n//                   <thead>\n//                     <tr>\n//                       <th>Leave Type</th>\n//                       <th>Start Date</th>\n//                       <th>End Date</th>\n//                       <th>Days</th>\n//                       <th>Status</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {leaveHistory.length > 0 ? (\n//                       leaveHistory.map((leave) => (\n//                         <tr key={leave._id}>\n//                           <td>{leave.leaveType}</td>\n//                           <td>\n//                             {new Date(leave.startDate).toLocaleDateString()}\n//                           </td>\n//                           <td>\n//                             {new Date(leave.endDate).toLocaleDateString()}\n//                           </td>\n//                           <td>{leave.numberOfDays} days</td>\n//                           <td>{leave.status}</td>\n//                         </tr>\n//                       ))\n//                     ) : (\n//                       <tr>\n//                         <td colSpan=\"5\" className=\"text-center\">\n//                           No leave history available.\n//                         </td>\n//                       </tr>\n//                     )}\n//                   </tbody>\n//                 </Table>\n//               </Card.Body>\n//             </Card>\n//           </div>\n//         </Col>\n\n//         {/* Sidebar for Upcoming Events */}\n//         <Col md={3} className=\"sidebar-right\">\n//           <Card>\n//             <Card.Body>\n//               <Card.Title>Upcoming Events</Card.Title>\n//               <ul className=\"list-group list-group-flush\">\n//                 <li className=\"list-group-item\">Pending Leave Approvals</li>\n//                 <li className=\"list-group-item\">HR Training Sessions</li>\n//                 <li className=\"list-group-item\">Manager Meeting</li>\n//               </ul>\n//             </Card.Body>\n//           </Card>\n//         </Col>\n//       </Row>\n//     </Container>\n//   );\n// };\n\n// export default EmployeeLeave;","map":{"version":3,"names":["express","require","multer","auth","Leave","User","calculateLeaveBalance","router","Router","upload","dest","calculateDaysBetween","start","end","startDate","Date","endDate","diffTime","Math","abs","ceil","post","single","req","res","leaveType","reason","body","documentUrl","file","filename","numberOfDays","leaveApplication","employeeId","user","id","status","save","json","message","error","console","send","get","_id","userId","findById","leaveBalance","userType","approvedLeaves","find","totalApprovedDays","reduce","total","leave","annualLeaveBalance","put","params","populate","msg","newAnnualLeaveBalance","findByIdAndUpdate","toLowerCase","module","exports"],"sources":["/Users/tebogoramolobeng/Documents/peopleconnect/frontend/src/employee/EmployeeLeave.js"],"sourcesContent":["const express = require(\"express\");\nconst multer = require(\"multer\");\nconst auth = require(\"../middleware/auth\");\nconst Leave = require(\"../models/Leave\");\nconst User = require(\"../models/User\");\nconst { calculateLeaveBalance } = require(\"../helpers/leaveCalculations\");\n\nconst router = express.Router();\nconst upload = multer({ dest: \"public/leave-docs/\" });\n\n// Calculate days between two dates\nconst calculateDaysBetween = (start, end) => {\n  const startDate = new Date(start);\n  const endDate = new Date(end);\n  const diffTime = Math.abs(endDate - startDate);\n  return Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;\n};\n\n// Apply for leave\nrouter.post(\"/apply\", auth, upload.single(\"document\"), async (req, res) => {\n  const { leaveType, startDate, endDate, reason } = req.body;\n  const documentUrl = req.file ? `/leave-docs/${req.file.filename}` : null;\n\n  try {\n    const numberOfDays = calculateDaysBetween(startDate, endDate);\n\n    const leaveApplication = new Leave({\n      employeeId: req.user.id,\n      leaveType,\n      startDate,\n      endDate,\n      reason,\n      documentUrl,\n      status: \"Pending\",\n      numberOfDays,\n    });\n\n    await leaveApplication.save();\n    res.json({\n      leaveApplication,\n      message: `Leave application submitted for ${numberOfDays} days`,\n    });\n  } catch (error) {\n    console.error(\"Error applying for leave:\", error.message);\n    res.status(500).send(\"Server Error\");\n  }\n});\n\n// Route to get leave balance\nrouter.get(\"/balance\", auth, async (req, res) => {\n  try {\n    if (!req.user || !req.user._id) {\n      return res.status(400).json({ error: \"User authentication failed.\" });\n    }\n\n    const userId = req.user._id;\n    const user = await User.findById(userId);\n\n    if (!user) {\n      return res.status(404).json({ error: \"User not found\" });\n    }\n\n    // Calculate leave balance with default 15 days annual leave for new users\n    let leaveBalance = calculateLeaveBalance(user.userType, user.startDate);\n\n    // Retrieve user's leave history for approved leaves and deduct from balance\n    const approvedLeaves = await Leave.find({\n      employeeId: userId,\n      status: \"Approved\",\n      leaveType: \"Annual\",\n    });\n\n    const totalApprovedDays = approvedLeaves.reduce(\n      (total, leave) => total + leave.numberOfDays,\n      0\n    );\n    leaveBalance.annualLeaveBalance -= totalApprovedDays; // Deduct used leave\n\n    res.json(leaveBalance);\n  } catch (error) {\n    console.error(\"Error fetching leave balance:\", error);\n    res.status(500).json({ error: \"Failed to fetch leave balance\" });\n  }\n});\n\n// Approve or decline leave\nrouter.put(\"/review/:id\", auth, async (req, res) => {\n  const { status } = req.body;\n  try {\n    const leaveApplication = await Leave.findById(req.params.id).populate(\n      \"employeeId\"\n    );\n    if (!leaveApplication) {\n      return res.status(404).json({ msg: \"Leave application not found\" });\n    }\n\n    leaveApplication.status = status;\n\n    if (status === \"Approved\" && leaveApplication.leaveType === \"Annual\") {\n      // Deduct from user's leave balance\n      const user = await User.findById(leaveApplication.employeeId._id);\n      const leaveBalance = calculateLeaveBalance(user.userType, user.startDate);\n\n      // Calculate new annual leave balance after deduction\n      const newAnnualLeaveBalance =\n        leaveBalance.annualLeaveBalance - leaveApplication.numberOfDays;\n      await User.findByIdAndUpdate(user._id, {\n        annualLeaveBalance: newAnnualLeaveBalance,\n      });\n    }\n\n    await leaveApplication.save();\n    res.json({ msg: `Leave ${status.toLowerCase()} successfully` });\n  } catch (error) {\n    console.error(\"Error reviewing leave:\", error.message);\n    res.status(500).send(\"Server Error\");\n  }\n});\n\nmodule.exports = router;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import {\n//   Form,\n//   Button,\n//   Container,\n//   Card,\n//   Spinner,\n//   Table,\n//   Row,\n//   Col,\n// } from \"react-bootstrap\";\n// import \"./Dashboard.css\"; // Assuming CSS is saved as EmployeeLeave.css\n\n// const EmployeeLeave = () => {\n//   const [leaveData, setLeaveData] = useState({\n//     leaveType: \"Annual\",\n//     startDate: \"\",\n//     endDate: \"\",\n//     reason: \"\",\n//   });\n//   const [file, setFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [numberOfDays, setNumberOfDays] = useState(0);\n//   const [leaveBalance, setLeaveBalance] = useState({\n//     annualLeaveBalance: 0,\n//     sickLeaveBalance: 0,\n//   });\n//   const [leaveHistory, setLeaveHistory] = useState([]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setLeaveData({ ...leaveData, [name]: value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   const calculateNumberOfDays = (start, end) => {\n//     const startDate = new Date(start);\n//     const endDate = new Date(end);\n//     const diffTime = Math.abs(endDate - startDate);\n//     return Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;\n//   };\n\n//   useEffect(() => {\n//     if (leaveData.startDate && leaveData.endDate) {\n//       setNumberOfDays(\n//         calculateNumberOfDays(leaveData.startDate, leaveData.endDate)\n//       );\n//     }\n//   }, [leaveData.startDate, leaveData.endDate]);\n\n//   const fetchLeaveData = async () => {\n//     try {\n//       const [balanceResponse, historyResponse] = await Promise.all([\n//         axios.get(\"http://localhost:5002/api/leaves/balance\", {\n//           headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n//         }),\n//         axios.get(\"http://localhost:5002/api/leaves/history\", {\n//           headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n//         }),\n//       ]);\n\n//       setLeaveBalance({\n//         annualLeaveBalance: balanceResponse.data.annualLeaveBalance,\n//         sickLeaveBalance: balanceResponse.data.sickLeaveBalance,\n//       });\n//       setLeaveHistory(historyResponse.data);\n//     } catch (error) {\n//       console.error(\"Error fetching leave data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchLeaveData();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(leaveData).forEach((key) =>\n//       formData.append(key, leaveData[key])\n//     );\n//     formData.append(\"numberOfDays\", numberOfDays);\n//     if (file) formData.append(\"document\", file);\n\n//     setLoading(true);\n//     try {\n//       await axios.post(\"http://localhost:5002/api/leaves/apply\", formData, {\n//         headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n//       });\n//       alert(\"Leave application submitted successfully\");\n//       await fetchLeaveData();\n//     } catch (error) {\n//       console.error(\"Error applying for leave:\", error);\n//     }\n//     setLoading(false);\n//   };\n\n//   return (\n//     <Container fluid className=\"leave-page\">\n//       <Row>\n//         {/* Main Content */}\n//         <Col md={9}>\n//           <div className=\"main-content\">\n//             <h2>Leave Management Dashboard</h2>\n\n//             <div className=\"leave-section\">\n//               <Card className=\"mb-4\">\n//                 <Card.Body>\n//                   <Card.Title>Apply for Leave</Card.Title>\n//                   <Form onSubmit={handleSubmit}>\n//                     <Form.Group controlId=\"leaveType\" className=\"mb-3\">\n//                       <Form.Label>Leave Type</Form.Label>\n//                       <Form.Control\n//                         as=\"select\"\n//                         name=\"leaveType\"\n//                         value={leaveData.leaveType}\n//                         onChange={handleChange}\n//                         required\n//                       >\n//                         <option value=\"Annual\">Annual Leave</option>\n//                         <option value=\"Sick\">Sick Leave</option>\n//                         <option value=\"Maternity\">Maternity Leave</option>\n//                         <option value=\"Unpaid\">Unpaid Leave</option>\n//                       </Form.Control>\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"startDate\" className=\"mb-3\">\n//                       <Form.Label>Start Date</Form.Label>\n//                       <Form.Control\n//                         type=\"date\"\n//                         name=\"startDate\"\n//                         onChange={handleChange}\n//                         required\n//                       />\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"endDate\" className=\"mb-3\">\n//                       <Form.Label>End Date</Form.Label>\n//                       <Form.Control\n//                         type=\"date\"\n//                         name=\"endDate\"\n//                         onChange={handleChange}\n//                         required\n//                       />\n//                     </Form.Group>\n\n//                     <p>\n//                       <strong>Days of Leave:</strong> {numberOfDays} days\n//                     </p>\n\n//                     <Button type=\"submit\" disabled={loading}>\n//                       {loading ? (\n//                         <Spinner animation=\"border\" size=\"sm\" />\n//                       ) : (\n//                         \"Submit Leave\"\n//                       )}\n//                     </Button>\n//                   </Form>\n//                 </Card.Body>\n//               </Card>\n\n//               <Card className=\"mb-4\">\n//                 <Card.Body>\n//                   <Card.Title>Leave Balance</Card.Title>\n//                   <p>\n//                     <strong>Annual Leave:</strong>{\" \"}\n//                     {leaveBalance.annualLeaveBalance} days\n//                   </p>\n//                   <p>\n//                     <strong>Sick Leave:</strong> {leaveBalance.sickLeaveBalance}{\" \"}\n//                     days\n//                   </p>\n//                   <p>\n//                     <strong>Remaining Annual Leave:</strong>{\" \"}\n//                     {leaveBalance.annualLeaveBalance} days\n//                   </p>\n//                 </Card.Body>\n//               </Card>\n//             </div>\n\n//             <Card className=\"leave-history mb-4\">\n//               <Card.Body>\n//                 <Card.Title>Leave History</Card.Title>\n//                 <Table striped bordered>\n//                   <thead>\n//                     <tr>\n//                       <th>Leave Type</th>\n//                       <th>Start Date</th>\n//                       <th>End Date</th>\n//                       <th>Days</th>\n//                       <th>Status</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {leaveHistory.length > 0 ? (\n//                       leaveHistory.map((leave) => (\n//                         <tr key={leave._id}>\n//                           <td>{leave.leaveType}</td>\n//                           <td>\n//                             {new Date(leave.startDate).toLocaleDateString()}\n//                           </td>\n//                           <td>\n//                             {new Date(leave.endDate).toLocaleDateString()}\n//                           </td>\n//                           <td>{leave.numberOfDays} days</td>\n//                           <td>{leave.status}</td>\n//                         </tr>\n//                       ))\n//                     ) : (\n//                       <tr>\n//                         <td colSpan=\"5\" className=\"text-center\">\n//                           No leave history available.\n//                         </td>\n//                       </tr>\n//                     )}\n//                   </tbody>\n//                 </Table>\n//               </Card.Body>\n//             </Card>\n//           </div>\n//         </Col>\n\n//         {/* Sidebar for Upcoming Events */}\n//         <Col md={3} className=\"sidebar-right\">\n//           <Card>\n//             <Card.Body>\n//               <Card.Title>Upcoming Events</Card.Title>\n//               <ul className=\"list-group list-group-flush\">\n//                 <li className=\"list-group-item\">Pending Leave Approvals</li>\n//                 <li className=\"list-group-item\">HR Training Sessions</li>\n//                 <li className=\"list-group-item\">Manager Meeting</li>\n//               </ul>\n//             </Card.Body>\n//           </Card>\n//         </Col>\n//       </Row>\n//     </Container>\n//   );\n// };\n\n// export default EmployeeLeave;\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAME,IAAI,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAC1C,MAAMG,KAAK,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AACxC,MAAMI,IAAI,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;AACtC,MAAM;EAAEK;AAAsB,CAAC,GAAGL,OAAO,CAAC,8BAA8B,CAAC;AAEzE,MAAMM,MAAM,GAAGP,OAAO,CAACQ,MAAM,CAAC,CAAC;AAC/B,MAAMC,MAAM,GAAGP,MAAM,CAAC;EAAEQ,IAAI,EAAE;AAAqB,CAAC,CAAC;;AAErD;AACA,MAAMC,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAK;EAC3C,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACH,KAAK,CAAC;EACjC,MAAMI,OAAO,GAAG,IAAID,IAAI,CAACF,GAAG,CAAC;EAC7B,MAAMI,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,OAAO,GAAGF,SAAS,CAAC;EAC9C,OAAOI,IAAI,CAACE,IAAI,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC;AACxD,CAAC;;AAED;AACAV,MAAM,CAACc,IAAI,CAAC,QAAQ,EAAElB,IAAI,EAAEM,MAAM,CAACa,MAAM,CAAC,UAAU,CAAC,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACzE,MAAM;IAAEC,SAAS;IAAEX,SAAS;IAAEE,OAAO;IAAEU;EAAO,CAAC,GAAGH,GAAG,CAACI,IAAI;EAC1D,MAAMC,WAAW,GAAGL,GAAG,CAACM,IAAI,GAAG,eAAeN,GAAG,CAACM,IAAI,CAACC,QAAQ,EAAE,GAAG,IAAI;EAExE,IAAI;IACF,MAAMC,YAAY,GAAGpB,oBAAoB,CAACG,SAAS,EAAEE,OAAO,CAAC;IAE7D,MAAMgB,gBAAgB,GAAG,IAAI5B,KAAK,CAAC;MACjC6B,UAAU,EAAEV,GAAG,CAACW,IAAI,CAACC,EAAE;MACvBV,SAAS;MACTX,SAAS;MACTE,OAAO;MACPU,MAAM;MACNE,WAAW;MACXQ,MAAM,EAAE,SAAS;MACjBL;IACF,CAAC,CAAC;IAEF,MAAMC,gBAAgB,CAACK,IAAI,CAAC,CAAC;IAC7Bb,GAAG,CAACc,IAAI,CAAC;MACPN,gBAAgB;MAChBO,OAAO,EAAE,mCAAmCR,YAAY;IAC1D,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACD,OAAO,CAAC;IACzDf,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACM,IAAI,CAAC,cAAc,CAAC;EACtC;AACF,CAAC,CAAC;;AAEF;AACAnC,MAAM,CAACoC,GAAG,CAAC,UAAU,EAAExC,IAAI,EAAE,OAAOoB,GAAG,EAAEC,GAAG,KAAK;EAC/C,IAAI;IACF,IAAI,CAACD,GAAG,CAACW,IAAI,IAAI,CAACX,GAAG,CAACW,IAAI,CAACU,GAAG,EAAE;MAC9B,OAAOpB,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;QAAEE,KAAK,EAAE;MAA8B,CAAC,CAAC;IACvE;IAEA,MAAMK,MAAM,GAAGtB,GAAG,CAACW,IAAI,CAACU,GAAG;IAC3B,MAAMV,IAAI,GAAG,MAAM7B,IAAI,CAACyC,QAAQ,CAACD,MAAM,CAAC;IAExC,IAAI,CAACX,IAAI,EAAE;MACT,OAAOV,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;QAAEE,KAAK,EAAE;MAAiB,CAAC,CAAC;IAC1D;;IAEA;IACA,IAAIO,YAAY,GAAGzC,qBAAqB,CAAC4B,IAAI,CAACc,QAAQ,EAAEd,IAAI,CAACpB,SAAS,CAAC;;IAEvE;IACA,MAAMmC,cAAc,GAAG,MAAM7C,KAAK,CAAC8C,IAAI,CAAC;MACtCjB,UAAU,EAAEY,MAAM;MAClBT,MAAM,EAAE,UAAU;MAClBX,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,MAAM0B,iBAAiB,GAAGF,cAAc,CAACG,MAAM,CAC7C,CAACC,KAAK,EAAEC,KAAK,KAAKD,KAAK,GAAGC,KAAK,CAACvB,YAAY,EAC5C,CACF,CAAC;IACDgB,YAAY,CAACQ,kBAAkB,IAAIJ,iBAAiB,CAAC,CAAC;;IAEtD3B,GAAG,CAACc,IAAI,CAACS,YAAY,CAAC;EACxB,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrDhB,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;MAAEE,KAAK,EAAE;IAAgC,CAAC,CAAC;EAClE;AACF,CAAC,CAAC;;AAEF;AACAjC,MAAM,CAACiD,GAAG,CAAC,aAAa,EAAErD,IAAI,EAAE,OAAOoB,GAAG,EAAEC,GAAG,KAAK;EAClD,MAAM;IAAEY;EAAO,CAAC,GAAGb,GAAG,CAACI,IAAI;EAC3B,IAAI;IACF,MAAMK,gBAAgB,GAAG,MAAM5B,KAAK,CAAC0C,QAAQ,CAACvB,GAAG,CAACkC,MAAM,CAACtB,EAAE,CAAC,CAACuB,QAAQ,CACnE,YACF,CAAC;IACD,IAAI,CAAC1B,gBAAgB,EAAE;MACrB,OAAOR,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;QAAEqB,GAAG,EAAE;MAA8B,CAAC,CAAC;IACrE;IAEA3B,gBAAgB,CAACI,MAAM,GAAGA,MAAM;IAEhC,IAAIA,MAAM,KAAK,UAAU,IAAIJ,gBAAgB,CAACP,SAAS,KAAK,QAAQ,EAAE;MACpE;MACA,MAAMS,IAAI,GAAG,MAAM7B,IAAI,CAACyC,QAAQ,CAACd,gBAAgB,CAACC,UAAU,CAACW,GAAG,CAAC;MACjE,MAAMG,YAAY,GAAGzC,qBAAqB,CAAC4B,IAAI,CAACc,QAAQ,EAAEd,IAAI,CAACpB,SAAS,CAAC;;MAEzE;MACA,MAAM8C,qBAAqB,GACzBb,YAAY,CAACQ,kBAAkB,GAAGvB,gBAAgB,CAACD,YAAY;MACjE,MAAM1B,IAAI,CAACwD,iBAAiB,CAAC3B,IAAI,CAACU,GAAG,EAAE;QACrCW,kBAAkB,EAAEK;MACtB,CAAC,CAAC;IACJ;IAEA,MAAM5B,gBAAgB,CAACK,IAAI,CAAC,CAAC;IAC7Bb,GAAG,CAACc,IAAI,CAAC;MAAEqB,GAAG,EAAE,SAASvB,MAAM,CAAC0B,WAAW,CAAC,CAAC;IAAgB,CAAC,CAAC;EACjE,CAAC,CAAC,OAAOtB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACD,OAAO,CAAC;IACtDf,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACM,IAAI,CAAC,cAAc,CAAC;EACtC;AACF,CAAC,CAAC;AAEFqB,MAAM,CAACC,OAAO,GAAGzD,MAAM;;AAEvignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}